<<<<<<< Updated upstream
<<<<<<< Updated upstream
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.2">Jekyll</generator><link href="http://simonfoley.org/feed.xml" rel="self" type="application/atom+xml" /><link href="http://simonfoley.org/" rel="alternate" type="text/html" /><updated>2022-08-03T19:13:34+02:00</updated><id>http://simonfoley.org/</id><title type="html">Simon Foley</title><subtitle>Research on security risk management, network and distributed access controls, security assurance and user-centered security</subtitle><entry><title type="html">Socio-technical security</title><link href="http://simonfoley.org/2020/06/01/Human.html" rel="alternate" type="text/html" title="Socio-technical security" /><published>2020-06-01T13:35:04+02:00</published><updated>2020-06-01T13:35:04+02:00</updated><id>http://simonfoley.org/2020/06/01/Human</id><content type="html" xml:base="http://simonfoley.org/2020/06/01/Human.html">&lt;p&gt;Security is often characterised as an ongoing process of identifying and assessing threats, selecting countermeasures and checking their efficacy. In this framing of security as “what” and “how”, it is easy to overlook “why”. Why does this software component have repeated security vulnerabilities? Why is this VPN misconfigured? Why are threat information sharing procedures not always followed? Or simply, why is my system secure?&lt;/p&gt;
=======
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.2">Jekyll</generator><link href="http://simonfoley.org/feed.xml" rel="self" type="application/atom+xml" /><link href="http://simonfoley.org/" rel="alternate" type="text/html" /><updated>2021-08-15T11:14:39+01:00</updated><id>http://simonfoley.org/</id><title type="html">Simon Foley</title><subtitle>Research on security risk management, network and distributed access controls, security assurance and user-centered security</subtitle><entry><title type="html">Socio-technical security</title><link href="http://simonfoley.org/2020/06/01/Human.html" rel="alternate" type="text/html" title="Socio-technical security" /><published>2020-06-01T12:35:04+01:00</published><updated>2020-06-01T12:35:04+01:00</updated><id>http://simonfoley.org/2020/06/01/Human</id><content type="html" xml:base="http://simonfoley.org/2020/06/01/Human.html">&lt;p&gt;Security is often characterised as an ongoing process of identifying and assessing threats, selecting countermeasures and checking their efficacy. In this framing of security as “what” and “how”, it is easy to overlook “why”. Why does this software component have repeated security vulnerabilities? Why is this VPN misconfigured? Why are threat information sharing procedures not always followed? Or simply, why is my system secure?&lt;/p&gt;
>>>>>>> Stashed changes
=======
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.2">Jekyll</generator><link href="http://simonfoley.org/feed.xml" rel="self" type="application/atom+xml" /><link href="http://simonfoley.org/" rel="alternate" type="text/html" /><updated>2021-08-15T11:14:39+01:00</updated><id>http://simonfoley.org/</id><title type="html">Simon Foley</title><subtitle>Research on security risk management, network and distributed access controls, security assurance and user-centered security</subtitle><entry><title type="html">Socio-technical security</title><link href="http://simonfoley.org/2020/06/01/Human.html" rel="alternate" type="text/html" title="Socio-technical security" /><published>2020-06-01T12:35:04+01:00</published><updated>2020-06-01T12:35:04+01:00</updated><id>http://simonfoley.org/2020/06/01/Human</id><content type="html" xml:base="http://simonfoley.org/2020/06/01/Human.html">&lt;p&gt;Security is often characterised as an ongoing process of identifying and assessing threats, selecting countermeasures and checking their efficacy. In this framing of security as “what” and “how”, it is easy to overlook “why”. Why does this software component have repeated security vulnerabilities? Why is this VPN misconfigured? Why are threat information sharing procedures not always followed? Or simply, why is my system secure?&lt;/p&gt;
>>>>>>> Stashed changes

&lt;p&gt;The user/developer often plays a central role in these questions, and we turn to Qualitative Research methods from the Social Sciences to help understand and diagnose how humans experience security systems. These methods can help us to ask why, and are useful in identifying unknown knowns: those security practices in our socio-technical system, both human and technical, good and bad, that we don’t know we know about.&lt;/p&gt;</content><author><name>Simon Foley</name></author><category term="security" /><category term="cybersecurity" /><category term="trust management" /><category term="security analytics" /><category term="simon foley" /><category term="access control" /><category term="security risk" /><category term="threat management" /><category term="socio-technical" /><category term="human experience" /><summary type="html">Security is often characterised as an ongoing process of identifying and assessing threats, selecting countermeasures and checking their efficacy. In this framing of security as “what” and “how”, it is easy to overlook “why”. Why does this software component have repeated security vulnerabilities? Why is this VPN misconfigured? Why are threat information sharing procedures not always followed? Or simply, why is my system secure?</summary></entry><entry><title type="html">Dynamic Policies for Shared Cyber-Physical Infrastructures under Attack (DYPOSIT)</title><link href="http://simonfoley.org/2019/01/06/DYPOSIT.html" rel="alternate" type="text/html" title="Dynamic Policies for Shared Cyber-Physical Infrastructures under Attack (DYPOSIT)" /><published>2019-01-06T17:08:00+01:00</published><updated>2019-01-06T17:08:00+01:00</updated><id>http://simonfoley.org/2019/01/06/DYPOSIT</id><content type="html" xml:base="http://simonfoley.org/2019/01/06/DYPOSIT.html">&lt;p&gt;&lt;a href=&quot;https://dyposit.eu&quot;&gt;DYPOSIT&lt;/a&gt; investigates the problem of large, shared cyber physical systems under attack. The project considers the challenge of dynamically formulating and adapting security controls, rapidly and on-demand, in the face of unfolding attacks on a shared cyber physical system fabric integrating multiple applications run by a variety of stakeholders. This &lt;a href=&quot;http://www.chistera.eu/&quot;&gt;Chist-ERA&lt;/a&gt; project is being undertaken in collaboration with Bristol University, Lancaster University,  Katholieke Universiteit Leuven, University College Cork and IMT Atlantique.&lt;/p&gt;</content><author><name>Simon Foley</name></author><category term="security" /><category term="cybersecurity" /><category term="trust management" /><category term="security analytics" /><category term="simon foley" /><category term="access control" /><category term="security risk" /><category term="threat management" /><category term="firewalls" /><summary type="html">DYPOSIT investigates the problem of large, shared cyber physical systems under attack. The project considers the challenge of dynamically formulating and adapting security controls, rapidly and on-demand, in the face of unfolding attacks on a shared cyber physical system fabric integrating multiple applications run by a variety of stakeholders. This Chist-ERA project is being undertaken in collaboration with Bristol University, Lancaster University, Katholieke Universiteit Leuven, University College Cork and IMT Atlantique.</summary></entry><entry><title type="html">IMT Chaire CyberCNI</title><link href="http://simonfoley.org/2018/01/01/CyberCNI.html" rel="alternate" type="text/html" title="IMT Chaire CyberCNI" /><published>2018-01-01T00:00:00+01:00</published><updated>2018-01-01T00:00:00+01:00</updated><id>http://simonfoley.org/2018/01/01/CyberCNI</id><content type="html" xml:base="http://simonfoley.org/2018/01/01/CyberCNI.html">&lt;p&gt;The IMT Chaire on the cybersecurity of critical infrastructures, held by
&lt;a href=&quot;https://www.imt-atlantique.fr/en&quot;&gt;IMT Atlantique&lt;/a&gt; 
in Rennes, is a collaboration between three schools of
&lt;a href=&quot;https://www.imt.fr/en&quot;&gt;Institute Mines Telecom&lt;/a&gt;&lt;br /&gt;
(IMT Atlantique, Telecom ParisSud and Telecom ParisTech) and industrial partners.&lt;/p&gt;</content><author><name>Simon Foley</name></author><category term="security" /><category term="cybersecurity" /><category term="trust management" /><category term="security analytics" /><category term="simon foley" /><category term="access control" /><category term="security risk" /><category term="threat management" /><category term="firewalls security research" /><category term="security education" /><category term="information flow" /><category term="non-interference" /><category term="trust management" /><category term="multilevel security" /><summary type="html">The IMT Chaire on the cybersecurity of critical infrastructures, held by IMT Atlantique in Rennes, is a collaboration between three schools of Institute Mines Telecom (IMT Atlantique, Telecom ParisSud and Telecom ParisTech) and industrial partners.</summary></entry><entry><title type="html">Mobile Autonomic Security for Network Access Controls</title><link href="http://simonfoley.org/2016/10/14/MasonSW.html" rel="alternate" type="text/html" title="Mobile Autonomic Security for Network Access Controls" /><published>2016-10-14T13:35:04+02:00</published><updated>2016-10-14T13:35:04+02:00</updated><id>http://simonfoley.org/2016/10/14/MasonSW</id><content type="html" xml:base="http://simonfoley.org/2016/10/14/MasonSW.html">&lt;p&gt;MASON is an agent that runs on an Android device and uses a knowledge base to automatically and in real-time configure the Android iptables firewall. 
The agent acts as an automated security expert, managing security on the device, on behalf of a non-expert user.
Ultan Neville implemented the
&lt;a href=&quot;http://www.cs.ucc.ie/~s.foley/Mason.apk&quot;&gt;current prototype&lt;/a&gt; which requires a rooted Android device with a 
kernel that supports Netfilter/iptables. 
Mason currently monitors six attributes of the Android state and configures iptables according to best-practices from
&lt;a href=&quot;http://www.dtic.mil/dtic/tr/fulltext/u2/a399879.pdf&quot;&gt;NIST 800-41&lt;/a&gt;/
&lt;a href=&quot;http://csrc.nist.gov/publications/nistpubs/800-41-Rev1/sp800-41-rev1.pdf&quot;&gt;NIST 800-41rev1&lt;/a&gt;,
&lt;a href=&quot;http://csrc.nist.gov/publications/nistpubs/800-124/SP800-124.pdf&quot;&gt;NIST 800-124&lt;/a&gt;,
&lt;a href=&quot;http://csrc.nist.gov/publications/nistpubs/800-114/SP800-114.pdf&quot;&gt;NIST 800-114&lt;/a&gt; and
&lt;a href=&quot;http://csrc.nist.gov/publications/drafts/800-153/Draft-SP800-153.pdf&quot;&gt;NIST 800-153&lt;/a&gt;. 
Further details on the design and operation of Mason can be found &lt;a href=&quot;http://security.ucc.ie/2015/01/23/Mason.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;</content><author><name>Simon Foley</name></author><category term="security" /><category term="cybersecurity" /><category term="trust management" /><category term="security analytics" /><category term="simon foley" /><category term="access control" /><category term="security risk" /><category term="threat management" /><category term="firewalls security research" /><summary type="html">MASON is an agent that runs on an Android device and uses a knowledge base to automatically and in real-time configure the Android iptables firewall. The agent acts as an automated security expert, managing security on the device, on behalf of a non-expert user. Ultan Neville implemented the current prototype which requires a rooted Android device with a kernel that supports Netfilter/iptables. Mason currently monitors six attributes of the Android state and configures iptables according to best-practices from NIST 800-41/ NIST 800-41rev1, NIST 800-124, NIST 800-114 and NIST 800-153. Further details on the design and operation of Mason can be found here.</summary></entry><entry><title type="html">Anomaly detection based on application system logs</title><link href="http://simonfoley.org/2016/05/01/Anomaly.html" rel="alternate" type="text/html" title="Anomaly detection based on application system logs" /><published>2016-05-01T13:35:04+02:00</published><updated>2016-05-01T13:35:04+02:00</updated><id>http://simonfoley.org/2016/05/01/Anomaly</id><content type="html" xml:base="http://simonfoley.org/2016/05/01/Anomaly.html"></content><author><name></name></author><category term="security" /><category term="cybersecurity" /><category term="trust management" /><category term="security analytics" /><category term="simon foley" /><category term="access control" /><category term="security risk" /><category term="threat management" /><category term="firewalls security research" /><summary type="html"></summary></entry><entry><title type="html">Mobile Autonomic Security for Network Access Controls</title><link href="http://simonfoley.org/2016/04/01/Mason.html" rel="alternate" type="text/html" title="Mobile Autonomic Security for Network Access Controls" /><published>2016-04-01T13:35:04+02:00</published><updated>2016-04-01T13:35:04+02:00</updated><id>http://simonfoley.org/2016/04/01/Mason</id><content type="html" xml:base="http://simonfoley.org/2016/04/01/Mason.html">&lt;p&gt;Smartphones, tablets and other mobile/handheld devices are increasingly the target of malicious software and other external attacks. The operating systems of these devices provide security mechanisms that can help defend against such attacks. However, a degree of technical expertise is required to understand and configure these mechanisms in order to properly defend against known threats. MASON is an agent that runs on the device and uses a knowledge base to automatically and in real-time configure the existing security mechanisms. The agent acts as an automated security expert, managing security on the device, on behalf of a non-expert user.&lt;/p&gt;
&lt;p&gt;

A MASON prototype has been implemented and tested on a number of Android platforms. The prototype currently monitors six attributes of the Android state, for which a threat model has been devised with corresponding catalogues of best practice implemented based on the standards: NIST 800-41, NIST 800-41rev1, NIST 800-124, NIST 800-114 and NIST 800-153
&lt;p&gt;

This project is funded by Science Foundation Ireland, as part of 
&lt;a href=&quot;http://www.fame.ie&quot;&gt;FAME&lt;/a&gt; and
&lt;a href=&quot;http://www.ctvr.ie&quot;&gt;CTVR&lt;/a&gt;.
&lt;/p&gt;&lt;/p&gt;</content><author><name>Simon Foley</name></author><category term="security" /><category term="cybersecurity" /><category term="trust management" /><category term="security analytics" /><category term="simon foley" /><category term="access control" /><category term="security risk" /><category term="threat management" /><category term="firewalls security research" /><summary type="html">Smartphones, tablets and other mobile/handheld devices are increasingly the target of malicious software and other external attacks. The operating systems of these devices provide security mechanisms that can help defend against such attacks. However, a degree of technical expertise is required to understand and configure these mechanisms in order to properly defend against known threats. MASON is an agent that runs on the device and uses a knowledge base to automatically and in real-time configure the existing security mechanisms. The agent acts as an automated security expert, managing security on the device, on behalf of a non-expert user.</summary></entry><entry><title type="html">Security Risk Management and Network Access Controls</title><link href="http://simonfoley.org/2014/06/01/FACNAC.html" rel="alternate" type="text/html" title="Security Risk Management and Network Access Controls" /><published>2014-06-01T00:00:00+02:00</published><updated>2014-06-01T00:00:00+02:00</updated><id>http://simonfoley.org/2014/06/01/FACNAC</id><content type="html" xml:base="http://simonfoley.org/2014/06/01/FACNAC.html">&lt;p&gt;NAC security mechanisms, for instance firewalls, are
routinely prescribed as requirements for compliance to security
standards such as PCI-DSS and ISO 27000. However, the effectiveness
of a NAC configuration may be hampered by poor understanding and/or
management of the overall security configuration, which may in turn,
unnecessarily expose the enterprise to known security threats. New
threats and/or service requirements often result in firefighting by
ad-hoc modification to an already large and complex configuration. 
This complexity is further compounded by the diverse range of NAC mechanisms 
used to secure an enterprise; ranging from firewalls and proxies to NAC-style controls within applications
themselves. As a consequence, it can be difficult to ensure that the
current NAC configuration is effective, that is, it sufficiently
mitigates threats while providing necessary access to
services. Ensuring ongoing best-practice NAC administration can be
costly as it requires up to date expert knowledge in a rapidly
changing field.&lt;/p&gt;

&lt;p&gt;A knowledge base is being developed that contains detailed
 prescriptions for threat management. 
 These catalogues of best practice describe how known threats are
 mitigated control configurations and are continually updated to
 reflect newly discovered vulnerabilities and revisions to best
 practice.&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;</content><author><name>Simon Foley</name></author><category term="security" /><category term="cybersecurity" /><category term="simon foley" /><category term="access control" /><category term="security risk" /><category term="threat management" /><category term="firewalls security research" /><category term="information flow" /><summary type="html">NAC security mechanisms, for instance firewalls, are routinely prescribed as requirements for compliance to security standards such as PCI-DSS and ISO 27000. However, the effectiveness of a NAC configuration may be hampered by poor understanding and/or management of the overall security configuration, which may in turn, unnecessarily expose the enterprise to known security threats. New threats and/or service requirements often result in firefighting by ad-hoc modification to an already large and complex configuration. This complexity is further compounded by the diverse range of NAC mechanisms used to secure an enterprise; ranging from firewalls and proxies to NAC-style controls within applications themselves. As a consequence, it can be difficult to ensure that the current NAC configuration is effective, that is, it sufficiently mitigates threats while providing necessary access to services. Ensuring ongoing best-practice NAC administration can be costly as it requires up to date expert knowledge in a rapidly changing field.</summary></entry><entry><title type="html">Analysis of Physical Access Control policies</title><link href="http://simonfoley.org/2014/01/01/pac.html" rel="alternate" type="text/html" title="Analysis of Physical Access Control policies" /><published>2014-01-01T00:00:00+01:00</published><updated>2014-01-01T00:00:00+01:00</updated><id>http://simonfoley.org/2014/01/01/pac</id><content type="html" xml:base="http://simonfoley.org/2014/01/01/pac.html">&lt;p&gt;Physical access controls, such as door locks, surveillance cameras, alarms and supervised access, provide points of demarcation between physical zones. A Physical Access Control system uses these controls to regulate physical access according an enterprise security policy. This project investigates the formal specification and analysis of these policies.&lt;/p&gt;</content><author><name>Simon Foley</name></author><category term="security" /><category term="cybersecurity" /><category term="security analytics" /><category term="simon foley" /><category term="access control" /><category term="security risk" /><category term="threat management" /><category term="firewalls security research" /><summary type="html">Physical access controls, such as door locks, surveillance cameras, alarms and supervised access, provide points of demarcation between physical zones. A Physical Access Control system uses these controls to regulate physical access according an enterprise security policy. This project investigates the formal specification and analysis of these policies.</summary></entry></feed>