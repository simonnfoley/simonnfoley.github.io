% Author Simon Foley s.foley@cs.ucc.ie
% Time-stamp: <98/05/22 10:19:53 snf22>

\begin{zsectionproof}{SCUP}{}

declare through SCUPnru; 


try lemma CanonicalPolicy\$domainCheck; reduce;
try lemma CP\_CView\$domainCheck; reduce;
try lemma CP\_NWD\$domainCheck; reduce;
try lemma CP\_NRU\$domainCheck; reduce;


try lemma SCUPftopall;
reduce;
instantiate u\_\_0 == u, v == u, w == u;
rewrite;

try lemma SCUPreflex;
reduce;
instantiate u\_\_0 == u, v == u, w == u;
rewrite;

try lemma SCUPtrans;
reduce; 
instantiate u\_\_0 == u, v\_\_0 == v, w\_\_0 == w;
rewrite;

try lemma SCUPanti;
reduce; 
instantiate u\_\_0 == u, v\_\_0 == v, w == u;
rewrite;

try lemma SCUPinvisproj;
invoke SCUP;
invoke CP\_CView;
invoke CanonicalPolicy;
instantiate u\_\_0 == u;
rewrite;

try lemma SCUPrfuninvis;
invoke SCUP;
invoke CP\_CView;
invoke CanonicalPolicy;
instantiate u\_\_1 == u, f\_\_0 == f;
rewrite;

try lemma SCUPview;
invoke SCUP;
invoke CP\_CView;
instantiate v\_\_0 == v, w\_\_0 == w, a\_\_0 == a ;
rewrite;

try lemma SCUPcons;
rewrite;
use SCUPview[\LEVEL, \LABEL, \FID][v := v, w := w, a := a];
use SCUPview[\LEVEL, \LABEL, \FID][v := v, w := w, a := b];
with disabled (SCUPview) prove by rewrite;
 
try lemma SCUPnwd;
invoke SCUP;
invoke CP\_NWD;
instantiate f\_\_0 == f, s\_\_0 == s, v\_\_0 == v, a\_\_0 == a;
rewrite;

try lemma SCUPnru;
invoke SCUP;
invoke CP\_NRU;
instantiate f\_\_0 == f, s\_\_0 == s, v\_\_0 == v, a\_\_0 == a;
rewrite;

try lemma CP\_NRUprev;
invoke CP\_NRU;
instantiate f\_\_0 == f, s\_\_0 == s, v\_\_0 == v, a\_\_0 == a;
instantiate f\_\_0 == f, s\_\_0 == s, v\_\_0 == v, a\_\_0 == b;
rewrite;

try lemma SCUPtopproj;
invoke SCUP;
invoke CP\_CView;
invoke CanonicalPolicy;
invoke RelabelPolicy;
instantiate a\_\_0 == a;
rewrite;

\end{zsectionproof}

