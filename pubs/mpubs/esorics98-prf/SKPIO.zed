% Author Simon Foley s.foley@cs.ucc.ie
% Time-stamp: <98/05/22 15:29:07 snf22>

\section{A Kernelized Label Manager} \label{s:kern}

%%\begin{zsection}{SKPIO}{toolkit,SCUP,OBJECT}



\begin{schema}{LabelStore0[\LEVEL,\LABEL]}
\deltaz : \LEVEL\cross OID[\LEVEL] \fun \LABEL
\\
CurrOIDs : \power OID[\LEVEL]
\end{schema}

\begin{schema}{InitialLabelStore0[\LEVEL,\LABEL,\FID]}
SCUP[\LEVEL,\LABEL,\FID] \\
LabelStore0[\LEVEL,\LABEL]
\where
\forall o:CurrOIDs; u,w:\LEVEL | u\fleq w @ \\
\t1 \deltaz(u,o) = \deltaz(w,o)\lproj u
\end{schema}

\newcommand{\RelabelZ}{Relabel0}
\begin{schema}{\RelabelZ[\LEVEL,\LABEL,\FID]}
SCUP[\LEVEL,\LABEL,\FID] 
\\
\Delta LabelStore0[\LEVEL,\LABEL] 
\also
req? : \LEVEL \\
oid? : OID\\
rfun? : \FID 
\where
\IF (oid?\in CurrOIDs) \\
\THEN 
  \deltaz' = \deltaz \oplus \{~u:\LEVEL | req?\fleq u \\
\t4      @ (u,oid?) \mapsto \Rfun(rfun?,req?,\deltaz(u,oid?))~\}
\\
\ELSE     ~~\deltaz' = \deltaz
\also
CurrOIDs' = CurrOIDs
\end{schema}


% This is a bit of a Hack.  I find set specification in comprehensions
% messy to deal with in Z/EVES. So Relabel0 gives an alternative (IMHO)
% Z/EVES-friendly way to specify the operation. This is the one used
% in the theorems, but for the purposes of the paper, I'm leaving the
% nicer-to-read form (\RelabelZ) for the reader!  Maybe I'll get back 
% to cleaning it up, someday.
%
%% \begin{schema}{Relabel0[\LEVEL,\LABEL,\FID]}
%% SCUP[\LEVEL,\LABEL,\FID] 
%% \also
%% \Delta LabelStore0[\LEVEL,\LABEL] 
%% \also
%% req? : \LEVEL \\
%% oid? : OID\\
%% rfun? : \FID 
%% \where
%% \IF (oid?\in CurrOIDs) \THEN \\
%% \t1 ( \forall u:\LEVEL; o:OID[\LEVEL] @ \\
%% \t3 \IF (oid?=o \land req?\fleq u) \THEN \\
%% \t4     \deltaz'(u,o) = \Rfun(rfun?,req?,\deltaz(u,o)) \\
%% \t3 \ELSE \\
%% \t4     \deltaz'(u,o) = \deltaz(u,o) )\\
%% \ELSE \\
%% \deltaz' = \deltaz
%% \also
%% CurrOIDs' = CurrOIDs
%% \end{schema}


\begin{schema}{ViewLabel0[\LEVEL,\LABEL,\FID]}
SCUP[\LEVEL,\LABEL,\FID] 
\\
\Xi LabelStore0[\LEVEL,\LABEL] 
\also
req? : \LEVEL \\
oid? : OID\\
lab! : \LABEL
\where
\IF (oid? \in CurrOIDs \land first(oid?)\fleq req?) \\
\THEN
  lab! = \deltaz(req?,oid?) \\
\ELSE
  ~~lab! = invisible
\end{schema}


%%\end{zsection}
