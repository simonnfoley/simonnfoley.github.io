% Author Simon Foley s.foley@cs.ucc.ie
% Time-stamp: <98/05/22 15:27:41 snf22>

%%\begin{zsection}{SKPI}{toolkit,SCUP,OBJECT}


\begin{schema}{LabelStore[\LEVEL,\LABEL]}
\delta : OID[\LEVEL] \pfun \LABEL\\
\end{schema}


\begin{schema}{Relabel[\LEVEL,\LABEL,\FID]}
SCUP[\LEVEL,\LABEL,\FID] 
\\
\Delta LabelStore[\LEVEL,\LABEL] 
\also
req? : \LEVEL \\
oid? : OID\\
rfun? : \FID 
\where
\IF (oid?\in\dom~\delta) \\
\THEN \delta' = \delta \oplus \{oid? \mapsto \Rfun(rfun?,req?,\delta(oid?))\}
\\ 
\ELSE ~~\delta' = \delta
\end{schema}


\begin{schema}{ViewLabel[\LEVEL,\LABEL,\FID]}
SCUP[\LEVEL,\LABEL,\FID] 
\\
\Xi LabelStore[\LEVEL,\LABEL] \also
req? : \LEVEL \\
oid? : OID\\
lab! : \LABEL
\where
\IF (oid?\in\dom~\delta\land first(oid?) \fleq req?) \\
\THEN  lab! = (\delta~oid?)\lproj req? 
\\
\ELSE ~~lab! = invisible
\end{schema}

\section{Security Analysis} \label{s:noni}


\begin{schema}{VEquiv[\LEVEL,\LABEL,\FID]} 
LabelStore[\LEVEL,\LABEL]\\
LabelStore'[\LEVEL,\LABEL]\\
SCUP[\LEVEL,\LABEL,\FID]\\
vl : \LEVEL
\where
\forall o:OID[\LEVEL] | first(o) \fleq vl @ 
\\
\t1 (o \in \dom(\delta) \iff o\in \dom(\delta')) 
\land \\
\t1 (o\in \dom \delta \cap \dom \delta' \implies 
\delta(o) \lproj vl = \delta'(o) \lproj vl)
\end{schema}


%%\begin[disabled]{theorem}{rule VEquivDom}[\LEVEL,\LABEL,\FID]
%%\forall VEquiv[\LEVEL,\LABEL,\FID][\delta''/\delta']; o:\LEVEL\cross ID | first(o) \fleq vl @
%% (o \in \dom[\LEVEL \cross ID, \LABEL](\delta) \iff o\in \dom[\LEVEL \cross ID, \LABEL](\delta'')) 
%%\end{theorem}

%%\begin[disabled]{theorem}{rule VEquivProj}[\LEVEL,\LABEL,\FID]
%%\forall VEquiv[\LEVEL,\LABEL,\FID][\delta''/\delta']; o:\LEVEL\cross ID | first(o) \fleq vl @
%% (o\in \dom \delta \cap \dom \delta'' \implies 
%% \delta(o) \lproj vl = \delta''(o) \lproj vl)
%%\end{theorem}


\begin{theorem}{Relabel\_NWD}[\LEVEL,\LABEL,\FID]
\forall Relabel[\LEVEL,\LABEL,\FID] ; vl:\LEVEL @ 
\\
\t1  \lnot (req? \fleq vl) \implies VEquiv[\LEVEL,\LABEL,\FID]
\end{theorem}

\begin{theorem}{ViewLabel\_NWD}[\LEVEL,\LABEL,\FID]
\forall ViewLabel[\LEVEL,\LABEL,\FID]; vl:\LEVEL @ 
\\
\t1  \lnot (req? \fleq vl) \implies VEquiv[\LEVEL,\LABEL,\FID]
\end{theorem}


\begin{theorem}{Relabel\_NRU}[\LEVEL,\LABEL,\FID]
\forall 
        Relabel[\LEVEL,\LABEL,\FID]; \\
\t1        Relabel[\LEVEL,\LABEL,\FID][\delta''/\delta, \delta'''/\delta']; 
        vl : \LEVEL  
\\
\t1 @ VEquiv[\LEVEL,\LABEL,\FID][\delta''/\delta'] 
\implies 
 VEquiv[\LEVEL,\LABEL,\FID][\delta'''/\delta] 
\end{theorem}

\begin{theorem}{ViewLabel\_NRU}[\LEVEL,\LABEL,\FID]
\forall ViewLabel[\LEVEL,\LABEL,\FID]; \\
\t1        ViewLabel[\LEVEL,\LABEL,\FID][\delta''/\delta, \delta'''/\delta', lab!''/lab!]; 
        vl : \LEVEL  \\
\t1 @ (VEquiv[\LEVEL,\LABEL,\FID][\delta''/\delta'] \land (req?\fleq vl))\\
\t2 \implies  
lab!=lab!''
\end{theorem}


%%\end{zsection}
